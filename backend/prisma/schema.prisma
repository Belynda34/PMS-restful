// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  username      String
  email     String   @unique
  password  String
  phone     String
  role      String   @default("USER") // USER or ADMIN
  bookings  Booking[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())@updatedAt
}


model ParkingSlot {
  id        Int      @id @default(autoincrement())
  spotId    String   @unique
  price     Float
  type      String   // e.g., Standard, Disabled
  location  String
  status    String   @default("Available") // Available, Booked, Pending
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())@updatedAt
}

model Booking {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  slotId      Int
  slot        ParkingSlot @relation(fields: [slotId], references: [id])
  spotId String?
  status      String      @default("Pending") // Pending, Accepted, Rejected
  rejectionReason String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())@updatedAt
}